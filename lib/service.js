// Generated by CoffeeScript 1.6.2
var async, express, http, mongo, service, syslog;

async = require('async');

syslog = require('node-syslog');

http = require('http');

express = require('express');

mongo = require('mongodb');

service = {
  start: function(options, callback) {
    syslog.init(options.log.name, syslog.LOG_PID | syslog.LOG_ODELAY, syslog.LOG_LOCAL0);
    this.application = express();
    this.application.use(express.logger('dev'));
    this.db = new mongo.Db(options.mongo.db, new mongo.Server(options.mongo.host, options.mongo.port), options.mongo.options);
    this.db.open(function(error) {
      console.log(error);
      return void 0;
    });
    this.server = http.createServer(this.application);
    this.server.on('error', function(error) {
      console.log('An error has occured');
      console.log(error);
      syslog.log(syslog.LOG_CRIT, 'Unable to start service');
      return void 0;
    });
    this.server.listen(options.service.port, options.service.host, function() {
      console.log('Listening now');
      syslog.log(syslog.LOG_INFO, 'Service successfully started');
      return void 0;
    });
    return this;
  },
  stop: function() {
    this.server.close();
    syslog.close();
    return this;
  }
};

module.exports = service;
