// Generated by CoffeeScript 1.3.3
var ObjectId, Schema, Storage, app, memcached, mongoose;

app = require('./app');

memcached = require('./memcached');

mongoose = require('mongoose');

Schema = mongoose.Schema;

ObjectId = mongoose.Types.ObjectId;

Storage = require('./models/storage');

app.get('/', function(req, res) {
  return res.send("<!doctype html>\n<html>\n	<head>\n	</head>\n	<body>\n		<form method=\"post\" action=\"/set/\">\n			<input type=\"text\" name=\"gamnatebe\" value=\"huesospidaras\" />\n			<input type=\"submit\" />\n		</form>\n	</body>\n</html>");
});

app.get('/version/', function(req, res) {
  return Storage.findOne({
    uid: req.uid
  }, function(err, doc) {
    if ((err != null) || !(doc != null)) {
      return res.send(404);
    } else {
      return res.json({
        version: doc.version
      });
    }
  });
});

app.post('/set/', function(req, res) {
  return Storage.findOne({
    uid: req.uid
  }, function(err, doc) {
    var key, val, _ref;
    if (err != null) {
      return res.send(503);
    } else {
      if (!(doc != null)) {
        doc = new Storage({
          uid: req.uid,
          data: req.body
        });
        return doc.save(function() {
          return res.send(200);
        });
      } else {
        _ref = req.body;
        for (key in _ref) {
          val = _ref[key];
          doc.data[key] = val;
        }
        return Storage.update({
          _id: doc._id
        }, {
          $inc: {
            version: 1
          },
          $set: {
            data: doc.data
          }
        }, function() {
          return res.send(200);
        });
      }
    }
  });
});

app.get('/data/', function(req, res) {
  return Storage.findOne({
    uid: req.uid
  }, function(err, doc) {
    return res.json(doc || {});
  });
});
