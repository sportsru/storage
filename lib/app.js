// Generated by CoffeeScript 1.3.3
var app, config, express, http, program, uid;

http = require('http');

express = require('express');

program = require('commander');

uid = require('./uid');

config = require('../config');

app = module.exports = express();

program.option('-a, --address <string>', 'REST service address', config.storage.address).option('-p, --port <port>', 'REST service port', config.storage.port).option('-b, --mongo <string>', 'MongoDB connection string', config.mongo).option('-m, --memcached <string>', 'Memcached servers list', config.memcached).option('-v, --verbose', 'Log requests', false).option('--memcached-prefix <string>', 'Memcached keys prefix', 's_').parse(process.argv);

app.use(express.bodyParser());

app.use(express.methodOverride());

if (program.verbose) {
  app.use(express.logger('short'));
}

app.use(uid);

app.use(app.router);

app.set('verbose', program.verbose);

app.set('memcached', program.memcached);

app.set('mongobase', program.mongo);

app.set('memcachedPrefix', program.memcachedPrefix);

if (app.get('env') === 'development') {
  app.use(express.errorHandler({
    dumpExceptions: true,
    showStack: true
  }));
}

if (app.get('env') === 'production') {
  app.use(express.errorHandler());
}

http.createServer(app).listen(program.port, program.address, function() {
  return console.log("REST server listening\nAddress			: \u001b[91m" + program.address + "\u001b[0m\nPort			: \u001b[91m" + program.port + "\u001b[0m\nMemcached		: \u001b[91m" + app.settings.memcached + "\u001b[0m\nMemcached Prefix	: \u001b[91m" + app.settings.memcachedPrefix + "\u001b[0m\nMongoDB			: \u001b[91m" + app.settings.mongobase + "\u001b[0m\nMode			: \u001b[91m" + app.settings.env + "\u001b[0m");
});
